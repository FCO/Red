#!/usr/bin/env raku

use Test;

my $*RED-DB = database "SQLite";

use lib '/home/runner/work/Red/Red/lib';
use Red "experimental migrations";

# Test a simpler approach: use the existing Red infrastructure
# but with a registry to track logical model versions

my %model-versions;

# Helper to register model versions
sub register-as-version($logical-name, $version, $model-class) {
    %model-versions{$logical-name}{$version} = $model-class;
    
    # Add some metadata to the model
    $model-class.HOW.add_method($model-class, 'logical-name', method { $logical-name });
    $model-class.HOW.add_method($model-class, 'logical-version', method { $version });
}

# Helper to get a model version
sub get-version($logical-name, $version) {
    %model-versions{$logical-name}{$version}
}

# Define different versions of the same logical model using different names
model UserV01 {
    has Str $.name is column;
    has Int $.age is column;
}

model UserV02 {
    has Str $.name is column;
    has Str $.full-name is column;
    has Int $.age is column;
}

# Register them as versions of the same logical model
register-as-version('User', v0.1, UserV01);
register-as-version('User', v0.2, UserV02);

subtest 'Basic Versioned Model Support' => {
    plan 6;
    
    # Test that we can retrieve models by version
    my $v01 = get-version('User', v0.1);
    my $v02 = get-version('User', v0.2);
    
    ok $v01, 'Can retrieve User v0.1';
    ok $v02, 'Can retrieve User v0.2';
    
    is $v01.^name, 'UserV01', 'v0.1 maps to correct model class';
    is $v02.^name, 'UserV02', 'v0.2 maps to correct model class';
    
    # Test logical name and version
    is $v01.logical-name, 'User', 'v0.1 has correct logical name';
    is $v02.logical-name, 'User', 'v0.2 has correct logical name';
}

subtest 'Migration Between Versions' => {
    plan 2;
    
    my $v01 = get-version('User', v0.1);
    my $v02 = get-version('User', v0.2);
    
    # Test migration using existing Red infrastructure
    lives-ok {
        $v02.^migration: {
            .full-name = "{ .name } (migrated)"
        }
    }, 'Can setup migration block';
    
    lives-ok {
        $v02.^migrate: :from($v01);
    }, 'Can execute migration';
}

done-testing;